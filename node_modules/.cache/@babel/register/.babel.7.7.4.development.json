{
  "{\"sourceRoot\":\"/Users/playra/aws-amplify-react-hooks\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/playra/aws-amplify-react-hooks\",\"filename\":\"/Users/playra/aws-amplify-react-hooks/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/playra/aws-amplify-react-hooks\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/playra/aws-amplify-react-hooks",
      "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/playra/aws-amplify-react-hooks",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/playra/aws-amplify-react-hooks/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// @flow\nvar hello = 'world';\nconsole.log('hello', hello);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImhlbGxvIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7OztBQURBO0FBR0EsSUFBTUEsS0FBSyxHQUFHLE9BQWQ7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWixFQUFxQkYsS0FBckIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BsYXlyYS9hd3MtYW1wbGlmeS1yZWFjdC1ob29rcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnXG5cbmNvbnN0IGhlbGxvID0gJ3dvcmxkJ1xuY29uc29sZS5sb2coJ2hlbGxvJywgaGVsbG8pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "hello",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;;;AADA;AAGA,IAAMA,KAAK,GAAG,OAAd;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB",
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "sourcesContent": [
        "// @flow\nimport _ from 'lodash'\n\nconst hello = 'world'\nconsole.log('hello', hello)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575145521337
  },
  "{\"sourceRoot\":\"/Users/playra/aws-amplify-react-hooks\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/playra/aws-amplify-react-hooks\",\"filename\":\"/Users/playra/aws-amplify-react-hooks/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/playra/aws-amplify-react-hooks\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/playra/aws-amplify-react-hooks",
      "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/playra/aws-amplify-react-hooks",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/playra/aws-amplify-react-hooks/index.js",
        "plugins": [
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import { useEffect, useReducer } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport _ from 'lodash';\nexport const getNames = constObj => Object.keys(constObj);\nconst hello = 'world';\nconsole.log('hello', hello); // create initial state\n\nexport const initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n};\nexport const useQuery = (query, options, queryData) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const read = async () => {\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      const queryStr = queryData[0];\n      const res = await API.graphql(graphqlOperation(query[queryStr], options));\n      const {\n        items,\n        nextToken\n      } = res.data[queryStr];\n      dispatch({\n        type: 'READ',\n        data: items,\n        nextToken\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        error: err.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    const owner = Auth.user.attributes.sub;\n    const [createStr, updateStr, deleteStr] = [queryData[1], queryData[2], queryData[3]];\n\n    const error = ({\n      errors\n    }) => dispatch({\n      type: 'ERROR',\n      error: errors[0].message\n    });\n\n    const subCreate = API.graphql(graphqlOperation(query[createStr], {\n      owner\n    })).subscribe({\n      next: e => dispatch({\n        type: 'SUBSCRIPTION',\n        obj: e.value.data[createStr]\n      }),\n      error\n    });\n    const subUpdate = API.graphql(graphqlOperation(query[updateStr], {\n      owner\n    })).subscribe({\n      next: e => {\n        return dispatch({\n          type: 'SUBSCRIPTION',\n          obj: e.value.data[updateStr]\n        });\n      },\n      error\n    });\n    const subDelete = API.graphql(graphqlOperation(query[deleteStr], {\n      owner\n    })).subscribe({\n      next: e => dispatch({\n        type: 'DELETE',\n        obj: e.value.data[deleteStr]\n      }),\n      error\n    });\n    return () => subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe(); // FIXME\n  }, []); //eslint-disable-line\n\n  const fetchMore = async () => {\n    try {\n      const {\n        nextToken\n      } = state;\n      const variables = { ...options.variables,\n        nextToken\n      };\n      const queryStr = queryData[0];\n      const res = await API.graphql(graphqlOperation(query[queryStr], variables));\n      nextToken !== null && dispatch({\n        type: 'READ',\n        data: res.data[queryStr].items,\n        nextToken: res.data[queryStr].nextToken\n      });\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        error: err.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    read(); // FIXME\n  }, []); //eslint-disable-line\n\n  const {\n    data,\n    loading,\n    error,\n    status\n  } = state;\n  return {\n    data,\n    loading,\n    error,\n    status,\n    fetchMore\n  };\n};\nexport const useMutation = input => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const create = async mutate => {\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      await API.graphql(graphqlOperation(mutate, {\n        input\n      }));\n      return true;\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        error: err.errors[0].message\n      });\n    }\n  };\n\n  const update = async mutate => {\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      await API.graphql(graphqlOperation(mutate, {\n        input\n      }));\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        error: err.errors[0].message\n      });\n    }\n  };\n\n  const del = async mutate => {\n    dispatch({\n      type: 'LOADING'\n    });\n\n    try {\n      const {\n        id\n      } = input;\n      await API.graphql(graphqlOperation(mutate, {\n        input: {\n          id\n        }\n      }));\n    } catch (err) {\n      dispatch({\n        type: 'ERROR',\n        error: err.errors[0].message\n      });\n    }\n  };\n\n  const {\n    loading,\n    error,\n    status\n  } = state;\n  return [create, update, del, {\n    loading,\n    error,\n    status\n  }];\n}; // create reducer to update state\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE':\n      return { ...state,\n        data: [action.items, ...state.data],\n        loading: false,\n        status: 'COMPLETE'\n      };\n\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return { ...state,\n        data: _.uniqBy([action.obj, ...state.data], 'id'),\n        loading: false,\n        status: 'COMPLETE'\n      };\n\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return { ...state,\n        data: _.uniqBy([...action.data, ...state.data], 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      };\n\n    case 'DELETE':\n      return { ...state,\n        // $FlowFixMe\n        data: [...state.data].filter(({\n          id\n        }) => id !== action.obj.id),\n        status: 'COMPLETE'\n      };\n\n    case 'LOADING':\n      return { ...state,\n        loading: true,\n        status: 'PROGRESS'\n      };\n\n    case 'ERROR':\n      return {\n        error: action.error,\n        loading: false,\n        status: 'FAILED'\n      };\n\n    case 'COMPLETE':\n      return { ...state,\n        loading: false,\n        status: 'COMPLETE'\n      };\n\n    default:\n      return state;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "useEffect",
        "useReducer",
        "Auth",
        "API",
        "graphqlOperation",
        "_",
        "getNames",
        "constObj",
        "Object",
        "keys",
        "hello",
        "console",
        "log",
        "initialState",
        "data",
        "error",
        "loading",
        "status",
        "nextToken",
        "useQuery",
        "query",
        "options",
        "queryData",
        "state",
        "dispatch",
        "reducer",
        "read",
        "type",
        "queryStr",
        "res",
        "graphql",
        "items",
        "err",
        "message",
        "owner",
        "user",
        "attributes",
        "sub",
        "createStr",
        "updateStr",
        "deleteStr",
        "errors",
        "subCreate",
        "subscribe",
        "next",
        "e",
        "obj",
        "value",
        "subUpdate",
        "subDelete",
        "unsubscribe",
        "fetchMore",
        "variables",
        "useMutation",
        "input",
        "create",
        "mutate",
        "update",
        "del",
        "id",
        "action",
        "uniqBy",
        "filter"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "sourcesContent": [
        "// @flow\nimport { useEffect, useReducer } from 'react'\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\nimport _ from 'lodash'\nimport type { ActionT, StateT } from './types'\n\nexport const getNames = (constObj: {}): Array<string> => Object.keys(constObj)\n\nconst hello = 'world'\nconsole.log('hello', hello)\n\n// create initial state\nexport const initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n}\n\nexport const useQuery = (query: {}, options: { variables: {} }, queryData: Array<string>) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const read = async () => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], options))\n      const { items, nextToken } = res.data[queryStr]\n      dispatch({ type: 'READ', data: items, nextToken })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    const owner = Auth.user.attributes.sub\n    const [createStr, updateStr, deleteStr] = [queryData[1], queryData[2], queryData[3]]\n    const error = ({ errors }) => dispatch({ type: 'ERROR', error: errors[0].message })\n    const subCreate = API.graphql(graphqlOperation(query[createStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[createStr] }),\n      error\n    })\n    const subUpdate = API.graphql(graphqlOperation(query[updateStr], { owner })).subscribe({\n      next: e => {\n        return dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[updateStr] })\n      },\n      error\n    })\n    const subDelete = API.graphql(graphqlOperation(query[deleteStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'DELETE', obj: e.value.data[deleteStr] }),\n      error\n    })\n    return () => subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const fetchMore = async () => {\n    try {\n      const { nextToken } = state\n      const variables = { ...options.variables, nextToken }\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], variables))\n      nextToken !== null &&\n        dispatch({\n          type: 'READ',\n          data: res.data[queryStr].items,\n          nextToken: res.data[queryStr].nextToken\n        })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    read()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const { data, loading, error, status } = state\n  return { data, loading, error, status, fetchMore }\n}\n\nexport const useMutation = (input: { id: string }) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const create = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n      return true\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const update = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const del = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const { id } = input\n      await API.graphql(graphqlOperation(mutate, { input: { id } }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const { loading, error, status } = state\n  return [create, update, del, { loading, error, status }]\n}\n\n// create reducer to update state\nexport const reducer = (state: StateT, action: ActionT) => {\n  switch (action.type) {\n    case 'CREATE':\n      return { ...state, data: [action.items, ...state.data], loading: false, status: 'COMPLETE' }\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return { ...state, data: _.uniqBy([action.obj, ...state.data], 'id'), loading: false, status: 'COMPLETE' }\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return {\n        ...state,\n        data: _.uniqBy([...action.data, ...state.data], 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      }\n    case 'DELETE':\n      return {\n        ...state,\n        // $FlowFixMe\n        data: [...state.data].filter(({ id }) => id !== action.obj.id),\n        status: 'COMPLETE'\n      }\n    case 'LOADING':\n      return { ...state, loading: true, status: 'PROGRESS' }\n    case 'ERROR':\n      return { error: action.error, loading: false, status: 'FAILED' }\n    case 'COMPLETE':\n      return { ...state, loading: false, status: 'COMPLETE' }\n    default:\n      return state\n  }\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1575145840554
  },
  "{\"sourceRoot\":\"/Users/playra/aws-amplify-react-hooks\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/playra/aws-amplify-react-hooks\",\"filename\":\"/Users/playra/aws-amplify-react-hooks/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/playra/aws-amplify-react-hooks\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/playra/aws-amplify-react-hooks",
      "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/playra/aws-amplify-react-hooks",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/playra/aws-amplify-react-hooks/index.js",
        "plugins": [
          [
            "flow",
            {}
          ],
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.useMutation = exports.useQuery = exports.initialState = exports.getNames = void 0;\n\nvar _react = require(\"react\");\n\nvar _awsAmplify = require(\"aws-amplify\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar getNames = function getNames(constObj) {\n  return Object.keys(constObj);\n};\n\nexports.getNames = getNames;\nvar hello = 'world';\nconsole.log('hello', hello); // create initial state\n\nvar initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n};\nexports.initialState = initialState;\n\nvar useQuery = function useQuery(query, options, queryData) {\n  // $FlowFixMe\n  var _useReducer = (0, _react.useReducer)(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var read = function read() {\n    var queryStr, res, _res$data$queryStr, items, nextToken;\n\n    return regeneratorRuntime.async(function read$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context.prev = 1;\n            queryStr = queryData[0];\n            _context.next = 5;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[queryStr], options)));\n\n          case 5:\n            res = _context.sent;\n            _res$data$queryStr = res.data[queryStr], items = _res$data$queryStr.items, nextToken = _res$data$queryStr.nextToken;\n            dispatch({\n              type: 'READ',\n              data: items,\n              nextToken: nextToken\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n\n  (0, _react.useEffect)(function () {\n    var owner = _awsAmplify.Auth.user.attributes.sub;\n    var _ref = [queryData[1], queryData[2], queryData[3]],\n        createStr = _ref[0],\n        updateStr = _ref[1],\n        deleteStr = _ref[2];\n\n    var error = function error(_ref2) {\n      var errors = _ref2.errors;\n      return dispatch({\n        type: 'ERROR',\n        error: errors[0].message\n      });\n    };\n\n    var subCreate = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[createStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'SUBSCRIPTION',\n          obj: e.value.data[createStr]\n        });\n      },\n      error: error\n    });\n\n    var subUpdate = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[updateStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'SUBSCRIPTION',\n          obj: e.value.data[updateStr]\n        });\n      },\n      error: error\n    });\n\n    var subDelete = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[deleteStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'DELETE',\n          obj: e.value.data[deleteStr]\n        });\n      },\n      error: error\n    });\n\n    return function () {\n      return subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe();\n    }; // FIXME\n  }, []); //eslint-disable-line\n\n  var fetchMore = function fetchMore() {\n    var nextToken, variables, queryStr, res;\n    return regeneratorRuntime.async(function fetchMore$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            nextToken = state.nextToken;\n            variables = _objectSpread({}, options.variables, {\n              nextToken: nextToken\n            });\n            queryStr = queryData[0];\n            _context2.next = 6;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[queryStr], variables)));\n\n          case 6:\n            res = _context2.sent;\n            nextToken !== null && dispatch({\n              type: 'READ',\n              data: res.data[queryStr].items,\n              nextToken: res.data[queryStr].nextToken\n            });\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: 'ERROR',\n              error: _context2.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n\n  (0, _react.useEffect)(function () {\n    read(); // FIXME\n  }, []); //eslint-disable-line\n\n  var data = state.data,\n      loading = state.loading,\n      error = state.error,\n      status = state.status;\n  return {\n    data: data,\n    loading: loading,\n    error: error,\n    status: status,\n    fetchMore: fetchMore\n  };\n};\n\nexports.useQuery = useQuery;\n\nvar useMutation = function useMutation(input) {\n  // $FlowFixMe\n  var _useReducer3 = (0, _react.useReducer)(reducer, initialState),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      state = _useReducer4[0],\n      dispatch = _useReducer4[1];\n\n  var create = function create(mutate) {\n    return regeneratorRuntime.async(function create$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context3.prev = 1;\n            _context3.next = 4;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: input\n            })));\n\n          case 4:\n            return _context3.abrupt(\"return\", true);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context3.t0.errors[0].message\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 7]]);\n  };\n\n  var update = function update(mutate) {\n    return regeneratorRuntime.async(function update$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context4.prev = 1;\n            _context4.next = 4;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: input\n            })));\n\n          case 4:\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context4.t0.errors[0].message\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 6]]);\n  };\n\n  var del = function del(mutate) {\n    var id;\n    return regeneratorRuntime.async(function del$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context5.prev = 1;\n            id = input.id;\n            _context5.next = 5;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: {\n                id: id\n              }\n            })));\n\n          case 5:\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context5.t0.errors[0].message\n            });\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[1, 7]]);\n  };\n\n  var loading = state.loading,\n      error = state.error,\n      status = state.status;\n  return [create, update, del, {\n    loading: loading,\n    error: error,\n    status: status\n  }];\n}; // create reducer to update state\n\n\nexports.useMutation = useMutation;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return _objectSpread({}, state, {\n        data: [action.items].concat(_toConsumableArray(state.data)),\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return _objectSpread({}, state, {\n        data: _lodash[\"default\"].uniqBy([action.obj].concat(_toConsumableArray(state.data)), 'id'),\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return _objectSpread({}, state, {\n        data: _lodash[\"default\"].uniqBy([].concat(_toConsumableArray(action.data), _toConsumableArray(state.data)), 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      });\n\n    case 'DELETE':\n      return _objectSpread({}, state, {\n        // $FlowFixMe\n        data: _toConsumableArray(state.data).filter(function (_ref3) {\n          var id = _ref3.id;\n          return id !== action.obj.id;\n        }),\n        status: 'COMPLETE'\n      });\n\n    case 'LOADING':\n      return _objectSpread({}, state, {\n        loading: true,\n        status: 'PROGRESS'\n      });\n\n    case 'ERROR':\n      return {\n        error: action.error,\n        loading: false,\n        status: 'FAILED'\n      };\n\n    case 'COMPLETE':\n      return _objectSpread({}, state, {\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldE5hbWVzIiwiY29uc3RPYmoiLCJPYmplY3QiLCJrZXlzIiwiaGVsbG8iLCJjb25zb2xlIiwibG9nIiwiaW5pdGlhbFN0YXRlIiwiZGF0YSIsImVycm9yIiwibG9hZGluZyIsInN0YXR1cyIsIm5leHRUb2tlbiIsInVzZVF1ZXJ5IiwicXVlcnkiLCJvcHRpb25zIiwicXVlcnlEYXRhIiwicmVkdWNlciIsInN0YXRlIiwiZGlzcGF0Y2giLCJyZWFkIiwidHlwZSIsInF1ZXJ5U3RyIiwiQVBJIiwiZ3JhcGhxbCIsInJlcyIsIml0ZW1zIiwibWVzc2FnZSIsIm93bmVyIiwiQXV0aCIsInVzZXIiLCJhdHRyaWJ1dGVzIiwic3ViIiwiY3JlYXRlU3RyIiwidXBkYXRlU3RyIiwiZGVsZXRlU3RyIiwiZXJyb3JzIiwic3ViQ3JlYXRlIiwic3Vic2NyaWJlIiwibmV4dCIsImUiLCJvYmoiLCJ2YWx1ZSIsInN1YlVwZGF0ZSIsInN1YkRlbGV0ZSIsInVuc3Vic2NyaWJlIiwiZmV0Y2hNb3JlIiwidmFyaWFibGVzIiwidXNlTXV0YXRpb24iLCJpbnB1dCIsImNyZWF0ZSIsIm11dGF0ZSIsInVwZGF0ZSIsImRlbCIsImlkIiwiYWN0aW9uIiwiXyIsInVuaXFCeSIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdPLElBQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUNDLFFBQUQ7QUFBQSxTQUFpQ0MsTUFBTSxDQUFDQyxJQUFQLENBQVlGLFFBQVosQ0FBakM7QUFBQSxDQUFqQjs7O0FBRVAsSUFBTUcsS0FBSyxHQUFHLE9BQWQ7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWixFQUFxQkYsS0FBckIsRSxDQUVBOztBQUNPLElBQU1HLFlBQVksR0FBRztBQUMxQkMsRUFBQUEsSUFBSSxFQUFFLEVBRG9CO0FBRTFCQyxFQUFBQSxLQUFL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SyxDQUFDVixJQUFWLEVBQWdCa0QsTUFBaEIsQ0FBdUI7QUFBQSxjQUFHSixFQUFILFNBQUdBLEVBQUg7QUFBQSxpQkFBWUEsRUFBRSxLQUFLQyxNQUFNLENBQUNkLEdBQVAsQ0FBV2EsRUFBOUI7QUFBQSxTQUF2QixDQUhSO0FBSUUzQyxRQUFBQSxNQUFNLEVBQUU7QUFKVjs7QUFNRixTQUFLLFNBQUw7QUFDRSwrQkFBWU8sS0FBWjtBQUFtQlIsUUFBQUEsT0FBTyxFQUFFLElBQTVCO0FBQWtDQyxRQUFBQSxNQUFNLEVBQUU7QUFBMUM7O0FBQ0YsU0FBSyxPQUFMO0FBQ0UsYUFBTztBQUFFRixRQUFBQSxLQUFLLEVBQUU4QyxNQUFNLENBQUM5QyxLQUFoQjtBQUF1QkMsUUFBQUEsT0FBTyxFQUFFLEtBQWhDO0FBQXVDQyxRQUFBQSxNQUFNLEVBQUU7QUFBL0MsT0FBUDs7QUFDRixTQUFLLFVBQUw7QUFDRSwrQkFBWU8sS0FBWjtBQUFtQlIsUUFBQUEsT0FBTyxFQUFFLEtBQTVCO0FBQW1DQyxRQUFBQSxNQUFNLEVBQUU7QUFBM0M7O0FBQ0Y7QUFDRSxhQUFPTyxLQUFQO0FBN0JKO0FBK0JELENBaENNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wbGF5cmEvYXdzLWFtcGxpZnktcmVhY3QtaG9va3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBBdXRoLCBBUEksIGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdhd3MtYW1wbGlmeSdcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCB0eXBlIHsgQWN0aW9uVCwgU3RhdGVUIH0gZnJvbSAnLi90eXBlcydcblxuZXhwb3J0IGNvbnN0IGdldE5hbWVzID0gKGNvbnN0T2JqOiB7fSk6IEFycmF5PHN0cmluZz4gPT4gT2JqZWN0LmtleXMoY29uc3RPYmopXG5cbmNvbnN0IGhlbGxvID0gJ3dvcmxkJ1xuY29uc29sZS5sb2coJ2hlbGxvJywgaGVsbG8pXG5cbi8vIGNyZWF0ZSBpbml0aWFsIHN0YXRlXG5leHBvcnQgY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBkYXRhOiBbXSxcbiAgZXJyb3I6ICcnLFxuICBsb2FkaW5nOiBmYWxzZSxcbiAgc3RhdHVzOiAnUEVORElORycsXG4gIG5leHRUb2tlbjogJydcbn1cblxuZXhwb3J0IGNvbnN0IHVzZVF1ZXJ5ID0gKHF1ZXJ5OiB7fSwgb3B0aW9uczogeyB2YXJpYWJsZXM6IHt9IH0sIHF1ZXJ5RGF0YTogQXJyYXk8c3RyaW5nPikgPT4ge1xuICAvLyAkRmxvd0ZpeE1lXG4gIGNvbnN0IFtzdGF0ZSwgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcjxTdGF0ZVQsIEFjdGlvblQ+KHJlZHVjZXIsIGluaXRpYWxTdGF0ZSlcblxuICBjb25zdCByZWFkID0gYXN5bmMgKCkgPT4ge1xuICAgIGRpc3BhdGNoKHsgdHlwZTogJ0xPQURJTkcnIH0pXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHF1ZXJ5U3RyID0gcXVlcnlEYXRhWzBdXG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKHF1ZXJ5W3F1ZXJ5U3RyXSwgb3B0aW9ucykpXG4gICAgICBjb25zdCB7IGl0ZW1zLCBuZXh0VG9rZW4gfSA9IHJlcy5kYXRhW3F1ZXJ5U3RyXVxuICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnUkVBRCcsIGRhdGE6IGl0ZW1zLCBuZXh0VG9rZW4gfSlcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGRpc3BhdGNoKHsgdHlwZTogJ0VSUk9SJywgZXJyb3I6IGVyci5tZXNzYWdlIH0pXG4gICAgfVxuICB9XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBvd25lciA9IEF1dGgudXNlci5hdHRyaWJ1dGVzLnN1YlxuICAgIGNvbnN0IFtjcmVhdGVTdHIsIHVwZGF0ZVN0ciwgZGVsZXRlU3RyXSA9IFtxdWVyeURhdGFbMV0sIHF1ZXJ5RGF0YVsyXSwgcXVlcnlEYXRhWzNdXVxuICAgIGNvbnN0IGVycm9yID0gKHsgZXJyb3JzIH0pID0+IGRpc3BhdGNoKHsgdHlwZTogJ0VSUk9SJywgZXJyb3I6IGVycm9yc1swXS5tZXNzYWdlIH0pXG4gICAgY29uc3Qgc3ViQ3JlYXRlID0gQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihxdWVyeVtjcmVhdGVTdHJdLCB7IG93bmVyIH0pKS5zdWJzY3JpYmUoe1xuICAgICAgbmV4dDogZSA9PiBkaXNwYXRjaCh7IHR5cGU6ICdTVUJTQ1JJUFRJT04nLCBvYmo6IGUudmFsdWUuZGF0YVtjcmVhdGVTdHJdIH0pLFxuICAgICAgZXJyb3JcbiAgICB9KVxuICAgIGNvbnN0IHN1YlVwZGF0ZSA9IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ocXVlcnlbdXBkYXRlU3RyXSwgeyBvd25lciB9KSkuc3Vic2NyaWJlKHtcbiAgICAgIG5leHQ6IGUgPT4ge1xuICAgICAgICByZXR1cm4gZGlzcGF0Y2goeyB0eXBlOiAnU1VCU0NSSVBUSU9OJywgb2JqOiBlLnZhbHVlLmRhdGFbdXBkYXRlU3RyXSB9KVxuICAgICAgfSxcbiAgICAgIGVycm9yXG4gICAgfSlcbiAgICBjb25zdCBzdWJEZWxldGUgPSBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKHF1ZXJ5W2RlbGV0ZVN0cl0sIHsgb3duZXIgfSkpLnN1YnNjcmliZSh7XG4gICAgICBuZXh0OiBlID0+IGRpc3BhdGNoKHsgdHlwZTogJ0RFTEVURScsIG9iajogZS52YWx1ZS5kYXRhW2RlbGV0ZVN0cl0gfSksXG4gICAgICBlcnJvclxuICAgIH0pXG4gICAgcmV0dXJuICgpID0+IHN1YkNyZWF0ZS51bnN1YnNjcmliZSgpICYmIHN1YlVwZGF0ZS51bnN1YnNjcmliZSgpICYmIHN1YkRlbGV0ZS51bnN1YnNjcmliZSgpXG4gICAgLy8gRklYTUVcbiAgfSwgW10pIC8vZXNsaW50LWRpc2FibGUtbGluZVxuXG4gIGNvbnN0IGZldGNoTW9yZSA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBuZXh0VG9rZW4gfSA9IHN0YXRlXG4gICAgICBjb25zdCB2YXJpYWJsZXMgPSB7IC4uLm9wdGlvbnMudmFyaWFibGVzLCBuZXh0VG9rZW4gfVxuICAgICAgY29uc3QgcXVlcnlTdHIgPSBxdWVyeURhdGFbMF1cbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ocXVlcnlbcXVlcnlTdHJdLCB2YXJpYWJsZXMpKVxuICAgICAgbmV4dFRva2VuICE9PSBudWxsICYmXG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiAnUkVBRCcsXG4gICAgICAgICAgZGF0YTogcmVzLmRhdGFbcXVlcnlTdHJdLml0ZW1zLFxuICAgICAgICAgIG5leHRUb2tlbjogcmVzLmRhdGFbcXVlcnlTdHJdLm5leHRUb2tlblxuICAgICAgICB9KVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnRVJST1InLCBlcnJvcjogZXJyLm1lc3NhZ2UgfSlcbiAgICB9XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJlYWQoKVxuICAgIC8vIEZJWE1FXG4gIH0sIFtdKSAvL2VzbGludC1kaXNhYmxlLWxpbmVcblxuICBjb25zdCB7IGRhdGEsIGxvYWRpbmcsIGVycm9yLCBzdGF0dXMgfSA9IHN0YXRlXG4gIHJldHVybiB7IGRhdGEsIGxvYWRpbmcsIGVycm9yLCBzdGF0dXMsIGZldGNoTW9yZSB9XG59XG5cbmV4cG9ydCBjb25zdCB1c2VNdXRhdGlvbiA9IChpbnB1dDogeyBpZDogc3RyaW5nIH0pID0+IHtcbiAgLy8gJEZsb3dGaXhNZVxuICBjb25zdCBbc3RhdGUsIGRpc3BhdGNoXSA9IHVzZVJlZHVjZXI8U3RhdGVULCBBY3Rpb25UPihyZWR1Y2VyLCBpbml0aWFsU3RhdGUpXG5cbiAgY29uc3QgY3JlYXRlID0gYXN5bmMgKG11dGF0ZTogc3RyaW5nKSA9PiB7XG4gICAgZGlzcGF0Y2goeyB0eXBlOiAnTE9BRElORycgfSlcbiAgICB0cnkge1xuICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGUsIHsgaW5wdXQgfSkpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnRVJST1InLCBlcnJvcjogZXJyLmVycm9yc1swXS5tZXNzYWdlIH0pXG4gICAgfVxuICB9XG5cbiAgY29uc3QgdXBkYXRlID0gYXN5bmMgKG11dGF0ZTogc3RyaW5nKSA9PiB7XG4gICAgZGlzcGF0Y2goeyB0eXBlOiAnTE9BRElORycgfSlcbiAgICB0cnkge1xuICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGUsIHsgaW5wdXQgfSkpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBkaXNwYXRjaCh7IHR5cGU6ICdFUlJPUicsIGVycm9yOiBlcnIuZXJyb3JzWzBdLm1lc3NhZ2UgfSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBkZWwgPSBhc3luYyAobXV0YXRlOiBzdHJpbmcpID0+IHtcbiAgICBkaXNwYXRjaCh7IHR5cGU6ICdMT0FESU5HJyB9KVxuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGlkIH0gPSBpbnB1dFxuICAgICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGUsIHsgaW5wdXQ6IHsgaWQgfSB9KSlcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGRpc3BhdGNoKHsgdHlwZTogJ0VSUk9SJywgZXJyb3I6IGVyci5lcnJvcnNbMF0ubWVzc2FnZSB9KVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHsgbG9hZGluZywgZXJyb3IsIHN0YXR1cyB9ID0gc3RhdGVcbiAgcmV0dXJuIFtjcmVhdGUsIHVwZGF0ZSwgZGVsLCB7IGxvYWRpbmcsIGVycm9yLCBzdGF0dXMgfV1cbn1cblxuLy8gY3JlYXRlIHJlZHVjZXIgdG8gdXBkYXRlIHN0YXRlXG5leHBvcnQgY29uc3QgcmVkdWNlciA9IChzdGF0ZTogU3RhdGVULCBhY3Rpb246IEFjdGlvblQpID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgJ0NSRUFURSc6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgZGF0YTogW2FjdGlvbi5pdGVtcywgLi4uc3RhdGUuZGF0YV0sIGxvYWRpbmc6IGZhbHNlLCBzdGF0dXM6ICdDT01QTEVURScgfVxuICAgIGNhc2UgJ1NVQlNDUklQVElPTic6XG4gICAgICAvLyBmbGF0bGlzdCBpcyB3cm9uZyB3aXRoIGZldGNoTW9yZSwgc28gdGhpcyBzb2x1dGlvblxuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGRhdGE6IF8udW5pcUJ5KFthY3Rpb24ub2JqLCAuLi5zdGF0ZS5kYXRhXSwgJ2lkJyksIGxvYWRpbmc6IGZhbHNlLCBzdGF0dXM6ICdDT01QTEVURScgfVxuICAgIGNhc2UgJ1JFQUQnOlxuICAgICAgLy8gZmxhdGxpc3QgaXMgd3Jvbmcgd2l0aCBmZXRjaE1vcmUsIHNvIHRoaXMgc29sdXRpb25cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBkYXRhOiBfLnVuaXFCeShbLi4uYWN0aW9uLmRhdGEsIC4uLnN0YXRlLmRhdGFdLCAnaWQnKSxcbiAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgIG5leHRUb2tlbjogYWN0aW9uLm5leHRUb2tlbixcbiAgICAgICAgc3RhdHVzOiAnQ09NUExFVEUnXG4gICAgICB9XG4gICAgY2FzZSAnREVMRVRFJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICAgIGRhdGE6IFsuLi5zdGF0ZS5kYXRhXS5maWx0ZXIoKHsgaWQgfSkgPT4gaWQgIT09IGFjdGlvbi5vYmouaWQpLFxuICAgICAgICBzdGF0dXM6ICdDT01QTEVURSdcbiAgICAgIH1cbiAgICBjYXNlICdMT0FESU5HJzpcbiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBsb2FkaW5nOiB0cnVlLCBzdGF0dXM6ICdQUk9HUkVTUycgfVxuICAgIGNhc2UgJ0VSUk9SJzpcbiAgICAgIHJldHVybiB7IGVycm9yOiBhY3Rpb24uZXJyb3IsIGxvYWRpbmc6IGZhbHNlLCBzdGF0dXM6ICdGQUlMRUQnIH1cbiAgICBjYXNlICdDT01QTEVURSc6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgbG9hZGluZzogZmFsc2UsIHN0YXR1czogJ0NPTVBMRVRFJyB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getNames",
        "constObj",
        "Object",
        "keys",
        "hello",
        "console",
        "log",
        "initialState",
        "data",
        "error",
        "loading",
        "status",
        "nextToken",
        "useQuery",
        "query",
        "options",
        "queryData",
        "reducer",
        "state",
        "dispatch",
        "read",
        "type",
        "queryStr",
        "API",
        "graphql",
        "res",
        "items",
        "message",
        "owner",
        "Auth",
        "user",
        "attributes",
        "sub",
        "createStr",
        "updateStr",
        "deleteStr",
        "errors",
        "subCreate",
        "subscribe",
        "next",
        "e",
        "obj",
        "value",
        "subUpdate",
        "subDelete",
        "unsubscribe",
        "fetchMore",
        "variables",
        "useMutation",
        "input",
        "create",
        "mutate",
        "update",
        "del",
        "id",
        "action",
        "_",
        "uniqBy",
        "filter"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "sourcesContent": [
        "// @flow\nimport { useEffect, useReducer } from 'react'\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\nimport _ from 'lodash'\nimport type { ActionT, StateT } from './types'\n\nexport const getNames = (constObj: {}): Array<string> => Object.keys(constObj)\n\nconst hello = 'world'\nconsole.log('hello', hello)\n\n// create initial state\nexport const initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n}\n\nexport const useQuery = (query: {}, options: { variables: {} }, queryData: Array<string>) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const read = async () => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], options))\n      const { items, nextToken } = res.data[queryStr]\n      dispatch({ type: 'READ', data: items, nextToken })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    const owner = Auth.user.attributes.sub\n    const [createStr, updateStr, deleteStr] = [queryData[1], queryData[2], queryData[3]]\n    const error = ({ errors }) => dispatch({ type: 'ERROR', error: errors[0].message })\n    const subCreate = API.graphql(graphqlOperation(query[createStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[createStr] }),\n      error\n    })\n    const subUpdate = API.graphql(graphqlOperation(query[updateStr], { owner })).subscribe({\n      next: e => {\n        return dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[updateStr] })\n      },\n      error\n    })\n    const subDelete = API.graphql(graphqlOperation(query[deleteStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'DELETE', obj: e.value.data[deleteStr] }),\n      error\n    })\n    return () => subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const fetchMore = async () => {\n    try {\n      const { nextToken } = state\n      const variables = { ...options.variables, nextToken }\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], variables))\n      nextToken !== null &&\n        dispatch({\n          type: 'READ',\n          data: res.data[queryStr].items,\n          nextToken: res.data[queryStr].nextToken\n        })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    read()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const { data, loading, error, status } = state\n  return { data, loading, error, status, fetchMore }\n}\n\nexport const useMutation = (input: { id: string }) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const create = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n      return true\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const update = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const del = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const { id } = input\n      await API.graphql(graphqlOperation(mutate, { input: { id } }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const { loading, error, status } = state\n  return [create, update, del, { loading, error, status }]\n}\n\n// create reducer to update state\nexport const reducer = (state: StateT, action: ActionT) => {\n  switch (action.type) {\n    case 'CREATE':\n      return { ...state, data: [action.items, ...state.data], loading: false, status: 'COMPLETE' }\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return { ...state, data: _.uniqBy([action.obj, ...state.data], 'id'), loading: false, status: 'COMPLETE' }\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return {\n        ...state,\n        data: _.uniqBy([...action.data, ...state.data], 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      }\n    case 'DELETE':\n      return {\n        ...state,\n        // $FlowFixMe\n        data: [...state.data].filter(({ id }) => id !== action.obj.id),\n        status: 'COMPLETE'\n      }\n    case 'LOADING':\n      return { ...state, loading: true, status: 'PROGRESS' }\n    case 'ERROR':\n      return { error: action.error, loading: false, status: 'FAILED' }\n    case 'COMPLETE':\n      return { ...state, loading: false, status: 'COMPLETE' }\n    default:\n      return state\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575145840554
  },
  "{\"sourceRoot\":\"/Users/playra/aws-amplify-react-hooks\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/playra/aws-amplify-react-hooks\",\"filename\":\"/Users/playra/aws-amplify-react-hooks/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/playra/aws-amplify-react-hooks\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassProperty\":{\"enter\":[null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/playra/aws-amplify-react-hooks",
      "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/playra/aws-amplify-react-hooks",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassProperty": {
              "enter": [
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/playra/aws-amplify-react-hooks/index.js",
        "plugins": [
          "jsx",
          [
            "flow",
            {}
          ],
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/playra/aws-amplify-react-hooks/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.useMutation = exports.useQuery = exports.initialState = exports.getNames = void 0;\n\nvar _react = require(\"react\");\n\nvar _awsAmplify = require(\"aws-amplify\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar getNames = function getNames(constObj) {\n  return Object.keys(constObj);\n};\n\nexports.getNames = getNames;\nvar hello = 'world';\nconsole.log('hello', hello); // create initial state\n\nvar initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n};\nexports.initialState = initialState;\n\nvar useQuery = function useQuery(query, options, queryData) {\n  // $FlowFixMe\n  var _useReducer = (0, _react.useReducer)(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var read = function read() {\n    var queryStr, res, _res$data$queryStr, items, nextToken;\n\n    return regeneratorRuntime.async(function read$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context.prev = 1;\n            queryStr = queryData[0];\n            _context.next = 5;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[queryStr], options)));\n\n          case 5:\n            res = _context.sent;\n            _res$data$queryStr = res.data[queryStr], items = _res$data$queryStr.items, nextToken = _res$data$queryStr.nextToken;\n            dispatch({\n              type: 'READ',\n              data: items,\n              nextToken: nextToken\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n\n  (0, _react.useEffect)(function () {\n    var owner = _awsAmplify.Auth.user.attributes.sub;\n    var _ref = [queryData[1], queryData[2], queryData[3]],\n        createStr = _ref[0],\n        updateStr = _ref[1],\n        deleteStr = _ref[2];\n\n    var error = function error(_ref2) {\n      var errors = _ref2.errors;\n      return dispatch({\n        type: 'ERROR',\n        error: errors[0].message\n      });\n    };\n\n    var subCreate = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[createStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'SUBSCRIPTION',\n          obj: e.value.data[createStr]\n        });\n      },\n      error: error\n    });\n\n    var subUpdate = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[updateStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'SUBSCRIPTION',\n          obj: e.value.data[updateStr]\n        });\n      },\n      error: error\n    });\n\n    var subDelete = _awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[deleteStr], {\n      owner: owner\n    })).subscribe({\n      next: function next(e) {\n        return dispatch({\n          type: 'DELETE',\n          obj: e.value.data[deleteStr]\n        });\n      },\n      error: error\n    });\n\n    return function () {\n      return subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe();\n    }; // FIXME\n  }, []); //eslint-disable-line\n\n  var fetchMore = function fetchMore() {\n    var nextToken, variables, queryStr, res;\n    return regeneratorRuntime.async(function fetchMore$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            nextToken = state.nextToken;\n            variables = _objectSpread({}, options.variables, {\n              nextToken: nextToken\n            });\n            queryStr = queryData[0];\n            _context2.next = 6;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(query[queryStr], variables)));\n\n          case 6:\n            res = _context2.sent;\n            nextToken !== null && dispatch({\n              type: 'READ',\n              data: res.data[queryStr].items,\n              nextToken: res.data[queryStr].nextToken\n            });\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: 'ERROR',\n              error: _context2.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  };\n\n  (0, _react.useEffect)(function () {\n    read(); // FIXME\n  }, []); //eslint-disable-line\n\n  var data = state.data,\n      loading = state.loading,\n      error = state.error,\n      status = state.status;\n  return {\n    data: data,\n    loading: loading,\n    error: error,\n    status: status,\n    fetchMore: fetchMore\n  };\n};\n\nexports.useQuery = useQuery;\n\nvar useMutation = function useMutation(input) {\n  // $FlowFixMe\n  var _useReducer3 = (0, _react.useReducer)(reducer, initialState),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      state = _useReducer4[0],\n      dispatch = _useReducer4[1];\n\n  var create = function create(mutate) {\n    return regeneratorRuntime.async(function create$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context3.prev = 1;\n            _context3.next = 4;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: input\n            })));\n\n          case 4:\n            return _context3.abrupt(\"return\", true);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context3.t0.errors[0].message\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 7]]);\n  };\n\n  var update = function update(mutate) {\n    return regeneratorRuntime.async(function update$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context4.prev = 1;\n            _context4.next = 4;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: input\n            })));\n\n          case 4:\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context4.t0.errors[0].message\n            });\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 6]]);\n  };\n\n  var del = function del(mutate) {\n    var id;\n    return regeneratorRuntime.async(function del$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: 'LOADING'\n            });\n            _context5.prev = 1;\n            id = input.id;\n            _context5.next = 5;\n            return regeneratorRuntime.awrap(_awsAmplify.API.graphql((0, _awsAmplify.graphqlOperation)(mutate, {\n              input: {\n                id: id\n              }\n            })));\n\n          case 5:\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch({\n              type: 'ERROR',\n              error: _context5.t0.errors[0].message\n            });\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[1, 7]]);\n  };\n\n  var loading = state.loading,\n      error = state.error,\n      status = state.status;\n  return [create, update, del, {\n    loading: loading,\n    error: error,\n    status: status\n  }];\n}; // create reducer to update state\n\n\nexports.useMutation = useMutation;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return _objectSpread({}, state, {\n        data: [action.items].concat(_toConsumableArray(state.data)),\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return _objectSpread({}, state, {\n        data: _lodash[\"default\"].uniqBy([action.obj].concat(_toConsumableArray(state.data)), 'id'),\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return _objectSpread({}, state, {\n        data: _lodash[\"default\"].uniqBy([].concat(_toConsumableArray(action.data), _toConsumableArray(state.data)), 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      });\n\n    case 'DELETE':\n      return _objectSpread({}, state, {\n        // $FlowFixMe\n        data: _toConsumableArray(state.data).filter(function (_ref3) {\n          var id = _ref3.id;\n          return id !== action.obj.id;\n        }),\n        status: 'COMPLETE'\n      });\n\n    case 'LOADING':\n      return _objectSpread({}, state, {\n        loading: true,\n        status: 'PROGRESS'\n      });\n\n    case 'ERROR':\n      return {\n        error: action.error,\n        loading: false,\n        status: 'FAILED'\n      };\n\n    case 'COMPLETE':\n      return _objectSpread({}, state, {\n        loading: false,\n        status: 'COMPLETE'\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getNames",
        "constObj",
        "Object",
        "keys",
        "hello",
        "console",
        "log",
        "initialState",
        "data",
        "error",
        "loading",
        "status",
        "nextToken",
        "useQuery",
        "query",
        "options",
        "queryData",
        "reducer",
        "state",
        "dispatch",
        "read",
        "type",
        "queryStr",
        "API",
        "graphql",
        "res",
        "items",
        "message",
        "owner",
        "Auth",
        "user",
        "attributes",
        "sub",
        "createStr",
        "updateStr",
        "deleteStr",
        "errors",
        "subCreate",
        "subscribe",
        "next",
        "e",
        "obj",
        "value",
        "subUpdate",
        "subDelete",
        "unsubscribe",
        "fetchMore",
        "variables",
        "useMutation",
        "input",
        "create",
        "mutate",
        "update",
        "del",
        "id",
        "action",
        "_",
        "uniqBy",
        "filter"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD;AAAA,SAAiCC,MAAM,CAACC,IAAP,CAAYF,QAAZ,CAAjC;AAAA,CAAjB;;;AAEP,IAAMG,KAAK,GAAG,OAAd;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,E,CAEA;;AACO,IAAMG,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,KAAK,EAAE,EAFmB;AAG1BC,EAAAA,OAAO,EAAE,KAHiB;AAI1BC,EAAAA,MAAM,EAAE,SAJkB;AAK1BC,EAAAA,SAAS,EAAE;AALe,CAArB;;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAYC,OAAZ,EAAwCC,SAAxC,EAAqE;AAC3F;AAD2F,oBAEjE,uBAA4BC,OAA5B,EAAqCV,YAArC,CAFiE;AAAA;AAAA,MAEpFW,KAFoF;AAAA,MAE7EC,QAF6E;;AAI3F,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXD,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AADW;AAGHC,YAAAA,QAHG,GAGQN,SAAS,CAAC,CAAD,CAHjB;AAAA;AAAA,4CAISO,gBAAIC,OAAJ,CAAY,kCAAiBV,KAAK,CAACQ,QAAD,CAAtB,EAAkCP,OAAlC,CAAZ,CAJT;;AAAA;AAIHU,YAAAA,GAJG;AAAA,iCAKoBA,GAAG,CAACjB,IAAJ,CAASc,QAAT,CALpB,EAKDI,KALC,sBAKDA,KALC,EAKMd,SALN,sBAKMA,SALN;AAMTO,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,MAAR;AAAgBb,cAAAA,IAAI,EAAEkB,KAAtB;AAA6Bd,cAAAA,SAAS,EAATA;AAA7B,aAAD,CAAR;AANS;AAAA;;AAAA;AAAA;AAAA;AAQTO,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,OAAR;AAAiBZ,cAAAA,KAAK,EAAE,YAAIkB;AAA5B,aAAD,CAAR;;AARS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAYA,wBAAU,YAAM;AACd,QAAMC,KAAK,GAAGC,iBAAKC,IAAL,CAAUC,UAAV,CAAqBC,GAAnC;AADc,eAE4B,CAAChB,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,EAA6BA,SAAS,CAAC,CAAD,CAAtC,CAF5B;AAAA,QAEPiB,SAFO;AAAA,QAEIC,SAFJ;AAAA,QAEeC,SAFf;;AAGd,QAAM1B,KAAK,GAAG,SAARA,KAAQ;AAAA,UAAG2B,MAAH,SAAGA,MAAH;AAAA,aAAgBjB,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,OAAR;AAAiBZ,QAAAA,KAAK,EAAE2B,MAAM,CAAC,CAAD,CAAN,CAAUT;AAAlC,OAAD,CAAxB;AAAA,KAAd;;AACA,QAAMU,SAAS,GAAGd,gBAAIC,OAAJ,CAAY,kCAAiBV,KAAK,CAACmB,SAAD,CAAtB,EAAmC;AAAEL,MAAAA,KAAK,EAALA;AAAF,KAAnC,CAAZ,EAA2DU,SAA3D,CAAqE;AACrFC,MAAAA,IAAI,EAAE,cAAAC,CAAC;AAAA,eAAIrB,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE,cAAR;AAAwBoB,UAAAA,GAAG,EAAED,CAAC,CAACE,KAAF,CAAQlC,IAAR,CAAayB,SAAb;AAA7B,SAAD,CAAZ;AAAA,OAD8E;AAErFxB,MAAAA,KAAK,EAALA;AAFqF,KAArE,CAAlB;;AAIA,QAAMkC,SAAS,GAAGpB,gBAAIC,OAAJ,CAAY,kCAAiBV,KAAK,CAACoB,SAAD,CAAtB,EAAmC;AAAEN,MAAAA,KAAK,EAALA;AAAF,KAAnC,CAAZ,EAA2DU,SAA3D,CAAqE;AACrFC,MAAAA,IAAI,EAAE,cAAAC,CAAC,EAAI;AACT,eAAOrB,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE,cAAR;AAAwBoB,UAAAA,GAAG,EAAED,CAAC,CAACE,KAAF,CAAQlC,IAAR,CAAa0B,SAAb;AAA7B,SAAD,CAAf;AACD,OAHoF;AAIrFzB,MAAAA,KAAK,EAALA;AAJqF,KAArE,CAAlB;;AAMA,QAAMmC,SAAS,GAAGrB,gBAAIC,OAAJ,CAAY,kCAAiBV,KAAK,CAACqB,SAAD,CAAtB,EAAmC;AAAEP,MAAAA,KAAK,EAALA;AAAF,KAAnC,CAAZ,EAA2DU,SAA3D,CAAqE;AACrFC,MAAAA,IAAI,EAAE,cAAAC,CAAC;AAAA,eAAIrB,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE,QAAR;AAAkBoB,UAAAA,GAAG,EAAED,CAAC,CAACE,KAAF,CAAQlC,IAAR,CAAa2B,SAAb;AAAvB,SAAD,CAAZ;AAAA,OAD8E;AAErF1B,MAAAA,KAAK,EAALA;AAFqF,KAArE,CAAlB;;AAIA,WAAO;AAAA,aAAM4B,SAAS,CAACQ,WAAV,MAA2BF,SAAS,CAACE,WAAV,EAA3B,IAAsDD,SAAS,CAACC,WAAV,EAA5D;AAAA,KAAP,CAlBc,CAmBd;AACD,GApBD,EAoBG,EApBH,EAhB2F,CAoCpF;;AAEP,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENlC,YAAAA,SAFM,GAEQM,KAFR,CAENN,SAFM;AAGRmC,YAAAA,SAHQ,qBAGShC,OAAO,CAACgC,SAHjB;AAG4BnC,cAAAA,SAAS,EAATA;AAH5B;AAIRU,YAAAA,QAJQ,GAIGN,SAAS,CAAC,CAAD,CAJZ;AAAA;AAAA,4CAKIO,gBAAIC,OAAJ,CAAY,kCAAiBV,KAAK,CAACQ,QAAD,CAAtB,EAAkCyB,SAAlC,CAAZ,CALJ;;AAAA;AAKRtB,YAAAA,GALQ;AAMdb,YAAAA,SAAS,KAAK,IAAd,IACEO,QAAQ,CAAC;AACPE,cAAAA,IAAI,EAAE,MADC;AAEPb,cAAAA,IAAI,EAAEiB,GAAG,CAACjB,IAAJ,CAASc,QAAT,EAAmBI,KAFlB;AAGPd,cAAAA,SAAS,EAAEa,GAAG,CAACjB,IAAJ,CAASc,QAAT,EAAmBV;AAHvB,aAAD,CADV;AANc;AAAA;;AAAA;AAAA;AAAA;AAadO,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,OAAR;AAAiBZ,cAAAA,KAAK,EAAE,aAAIkB;AAA5B,aAAD,CAAR;;AAbc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAiBA,wBAAU,YAAM;AACdP,IAAAA,IAAI,GADU,CAEd;AACD,GAHD,EAGG,EAHH,EAvD2F,CA0DpF;;AA1DoF,MA4DnFZ,IA5DmF,GA4DlDU,KA5DkD,CA4DnFV,IA5DmF;AAAA,MA4D7EE,OA5D6E,GA4DlDQ,KA5DkD,CA4D7ER,OA5D6E;AAAA,MA4DpED,KA5DoE,GA4DlDS,KA5DkD,CA4DpET,KA5DoE;AAAA,MA4D7DE,MA5D6D,GA4DlDO,KA5DkD,CA4D7DP,MA5D6D;AA6D3F,SAAO;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA,OAAR;AAAiBD,IAAAA,KAAK,EAALA,KAAjB;AAAwBE,IAAAA,MAAM,EAANA,MAAxB;AAAgCmC,IAAAA,SAAS,EAATA;AAAhC,GAAP;AACD,CA9DM;;;;AAgEA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA2B;AACpD;AADoD,qBAE1B,uBAA4BhC,OAA5B,EAAqCV,YAArC,CAF0B;AAAA;AAAA,MAE7CW,KAF6C;AAAA,MAEtCC,QAFsC;;AAIpD,MAAM+B,MAAM,GAAG,SAATA,MAAS,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AACbhC,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AADa;AAAA;AAAA,4CAGLE,gBAAIC,OAAJ,CAAY,kCAAiB2B,MAAjB,EAAyB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAAzB,CAAZ,CAHK;;AAAA;AAAA,8CAIJ,IAJI;;AAAA;AAAA;AAAA;AAMX9B,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,OAAR;AAAiBZ,cAAAA,KAAK,EAAE,aAAI2B,MAAJ,CAAW,CAAX,EAAcT;AAAtC,aAAD,CAAR;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAUA,MAAMyB,MAAM,GAAG,SAATA,MAAS,CAAOD,MAAP;AAAA;AAAA;AAAA;AAAA;AACbhC,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AADa;AAAA;AAAA,4CAGLE,gBAAIC,OAAJ,CAAY,kCAAiB2B,MAAjB,EAAyB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAAzB,CAAZ,CAHK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKX9B,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,OAAR;AAAiBZ,cAAAA,KAAK,EAAE,aAAI2B,MAAJ,CAAW,CAAX,EAAcT;AAAtC,aAAD,CAAR;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AASA,MAAM0B,GAAG,GAAG,SAANA,GAAM,CAAOF,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVhC,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAR;AADU;AAGAiC,YAAAA,EAHA,GAGOL,KAHP,CAGAK,EAHA;AAAA;AAAA,4CAIF/B,gBAAIC,OAAJ,CAAY,kCAAiB2B,MAAjB,EAAyB;AAAEF,cAAAA,KAAK,EAAE;AAAEK,gBAAAA,EAAE,EAAFA;AAAF;AAAT,aAAzB,CAAZ,CAJE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMRnC,YAAAA,QAAQ,CAAC;AAAEE,cAAAA,IAAI,EAAE,OAAR;AAAiBZ,cAAAA,KAAK,EAAE,aAAI2B,MAAJ,CAAW,CAAX,EAAcT;AAAtC,aAAD,CAAR;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAvBoD,MAiC5CjB,OAjC4C,GAiCjBQ,KAjCiB,CAiC5CR,OAjC4C;AAAA,MAiCnCD,KAjCmC,GAiCjBS,KAjCiB,CAiCnCT,KAjCmC;AAAA,MAiC5BE,MAjC4B,GAiCjBO,KAjCiB,CAiC5BP,MAjC4B;AAkCpD,SAAO,CAACuC,MAAD,EAASE,MAAT,EAAiBC,GAAjB,EAAsB;AAAE3C,IAAAA,OAAO,EAAPA,OAAF;AAAWD,IAAAA,KAAK,EAALA,KAAX;AAAkBE,IAAAA,MAAM,EAANA;AAAlB,GAAtB,CAAP;AACD,CAnCM,C,CAqCP;;;;;AACO,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAgBqC,MAAhB,EAAoC;AACzD,UAAQA,MAAM,CAAClC,IAAf;AACE,SAAK,QAAL;AACE,+BAAYH,KAAZ;AAAmBV,QAAAA,IAAI,GAAG+C,MAAM,CAAC7B,KAAV,4BAAoBR,KAAK,CAACV,IAA1B,EAAvB;AAAwDE,QAAAA,OAAO,EAAE,KAAjE;AAAwEC,QAAAA,MAAM,EAAE;AAAhF;;AACF,SAAK,cAAL;AACE;AACA,+BAAYO,KAAZ;AAAmBV,QAAAA,IAAI,EAAEgD,mBAAEC,MAAF,EAAUF,MAAM,CAACd,GAAjB,4BAAyBvB,KAAK,CAACV,IAA/B,IAAsC,IAAtC,CAAzB;AAAsEE,QAAAA,OAAO,EAAE,KAA/E;AAAsFC,QAAAA,MAAM,EAAE;AAA9F;;AACF,SAAK,MAAL;AACE;AACA,+BACKO,KADL;AAEEV,QAAAA,IAAI,EAAEgD,mBAAEC,MAAF,8BAAaF,MAAM,CAAC/C,IAApB,sBAA6BU,KAAK,CAACV,IAAnC,IAA0C,IAA1C,CAFR;AAGEE,QAAAA,OAAO,EAAE,KAHX;AAIEE,QAAAA,SAAS,EAAE2C,MAAM,CAAC3C,SAJpB;AAKED,QAAAA,MAAM,EAAE;AALV;;AAOF,SAAK,QAAL;AACE,+BACKO,KADL;AAEE;AACAV,QAAAA,IAAI,EAAE,mBAAIU,KAAK,CAACV,IAAV,EAAgBkD,MAAhB,CAAuB;AAAA,cAAGJ,EAAH,SAAGA,EAAH;AAAA,iBAAYA,EAAE,KAAKC,MAAM,CAACd,GAAP,CAAWa,EAA9B;AAAA,SAAvB,CAHR;AAIE3C,QAAAA,MAAM,EAAE;AAJV;;AAMF,SAAK,SAAL;AACE,+BAAYO,KAAZ;AAAmBR,QAAAA,OAAO,EAAE,IAA5B;AAAkCC,QAAAA,MAAM,EAAE;AAA1C;;AACF,SAAK,OAAL;AACE,aAAO;AAAEF,QAAAA,KAAK,EAAE8C,MAAM,CAAC9C,KAAhB;AAAuBC,QAAAA,OAAO,EAAE,KAAhC;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAAP;;AACF,SAAK,UAAL;AACE,+BAAYO,KAAZ;AAAmBR,QAAAA,OAAO,EAAE,KAA5B;AAAmCC,QAAAA,MAAM,EAAE;AAA3C;;AACF;AACE,aAAOO,KAAP;AA7BJ;AA+BD,CAhCM",
      "sourceRoot": "/Users/playra/aws-amplify-react-hooks",
      "sourcesContent": [
        "// @flow\nimport { useEffect, useReducer } from 'react'\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\nimport _ from 'lodash'\nimport type { ActionT, StateT } from './types'\n\nexport const getNames = (constObj: {}): Array<string> => Object.keys(constObj)\n\nconst hello = 'world'\nconsole.log('hello', hello)\n\n// create initial state\nexport const initialState = {\n  data: [],\n  error: '',\n  loading: false,\n  status: 'PENDING',\n  nextToken: ''\n}\n\nexport const useQuery = (query: {}, options: { variables: {} }, queryData: Array<string>) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const read = async () => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], options))\n      const { items, nextToken } = res.data[queryStr]\n      dispatch({ type: 'READ', data: items, nextToken })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    const owner = Auth.user.attributes.sub\n    const [createStr, updateStr, deleteStr] = [queryData[1], queryData[2], queryData[3]]\n    const error = ({ errors }) => dispatch({ type: 'ERROR', error: errors[0].message })\n    const subCreate = API.graphql(graphqlOperation(query[createStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[createStr] }),\n      error\n    })\n    const subUpdate = API.graphql(graphqlOperation(query[updateStr], { owner })).subscribe({\n      next: e => {\n        return dispatch({ type: 'SUBSCRIPTION', obj: e.value.data[updateStr] })\n      },\n      error\n    })\n    const subDelete = API.graphql(graphqlOperation(query[deleteStr], { owner })).subscribe({\n      next: e => dispatch({ type: 'DELETE', obj: e.value.data[deleteStr] }),\n      error\n    })\n    return () => subCreate.unsubscribe() && subUpdate.unsubscribe() && subDelete.unsubscribe()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const fetchMore = async () => {\n    try {\n      const { nextToken } = state\n      const variables = { ...options.variables, nextToken }\n      const queryStr = queryData[0]\n      const res = await API.graphql(graphqlOperation(query[queryStr], variables))\n      nextToken !== null &&\n        dispatch({\n          type: 'READ',\n          data: res.data[queryStr].items,\n          nextToken: res.data[queryStr].nextToken\n        })\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.message })\n    }\n  }\n\n  useEffect(() => {\n    read()\n    // FIXME\n  }, []) //eslint-disable-line\n\n  const { data, loading, error, status } = state\n  return { data, loading, error, status, fetchMore }\n}\n\nexport const useMutation = (input: { id: string }) => {\n  // $FlowFixMe\n  const [state, dispatch] = useReducer<StateT, ActionT>(reducer, initialState)\n\n  const create = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n      return true\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const update = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      await API.graphql(graphqlOperation(mutate, { input }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const del = async (mutate: string) => {\n    dispatch({ type: 'LOADING' })\n    try {\n      const { id } = input\n      await API.graphql(graphqlOperation(mutate, { input: { id } }))\n    } catch (err) {\n      dispatch({ type: 'ERROR', error: err.errors[0].message })\n    }\n  }\n\n  const { loading, error, status } = state\n  return [create, update, del, { loading, error, status }]\n}\n\n// create reducer to update state\nexport const reducer = (state: StateT, action: ActionT) => {\n  switch (action.type) {\n    case 'CREATE':\n      return { ...state, data: [action.items, ...state.data], loading: false, status: 'COMPLETE' }\n    case 'SUBSCRIPTION':\n      // flatlist is wrong with fetchMore, so this solution\n      return { ...state, data: _.uniqBy([action.obj, ...state.data], 'id'), loading: false, status: 'COMPLETE' }\n    case 'READ':\n      // flatlist is wrong with fetchMore, so this solution\n      return {\n        ...state,\n        data: _.uniqBy([...action.data, ...state.data], 'id'),\n        loading: false,\n        nextToken: action.nextToken,\n        status: 'COMPLETE'\n      }\n    case 'DELETE':\n      return {\n        ...state,\n        // $FlowFixMe\n        data: [...state.data].filter(({ id }) => id !== action.obj.id),\n        status: 'COMPLETE'\n      }\n    case 'LOADING':\n      return { ...state, loading: true, status: 'PROGRESS' }\n    case 'ERROR':\n      return { error: action.error, loading: false, status: 'FAILED' }\n    case 'COMPLETE':\n      return { ...state, loading: false, status: 'COMPLETE' }\n    default:\n      return state\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575145840554
  }
}